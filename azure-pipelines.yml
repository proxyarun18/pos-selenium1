trigger:
  branches:
    include:
      - main

variables:
  sonarProjectKey: 'SonarQubeArun'
  sonarProjectName: 'SonarQubeArun'
  sonarHostUrl: 'http://98.70.57.201:9000'
  sonarToken: 'sqp_0a4b770d57dda6e9259c353925571263a6a155c1'

stages:
  - stage: QA_Build_And_Scan
    displayName: Build, Test and SonarQube Scan
    jobs:
      - job: BuildTestScan
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          # Run tests but do NOT fail the pipeline on test failures
          - script: |
              mvn clean verify
            displayName: Run Tests
            continueOnError: true

          # Run SonarQube scan always, even if previous step failed
          - script: |
              mvn sonar:sonar \
                -Dsonar.projectKey=$(sonarProjectKey) \
                -Dsonar.projectName='$(sonarProjectName)' \
                -Dsonar.host.url=$(sonarHostUrl) \
                -Dsonar.token=$(sonarToken)
            displayName: Run SonarQube Scan
